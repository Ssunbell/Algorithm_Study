# 하노이타워에서 목적은 A에서 C로 원판을 옮기는 것이다.
# 만약 원판이 1개라면 그냥 1개의 원판을 A에서 C로 옮기면된다.
# 만약 원판이 2개라면 원판 1을 A->B로 옮기고 원판 2를 A->C로 옮긴 다음 원판 1을 B->C로 옮긴다.
# 이 과정은 원판이 3개...n개라도 동일하다.
# 옮겨야할 원판이 맨 밑에 원판 n이라면 그 위에 n-1개의 원판을 b로 옮겨야한다.
# 따라서 단계는 3단계이다.
# 1. n-1개의 원판을 A->B로 옮긴다
# 2. 원판 n을 A->C로 옮긴다.
# 3. n-1개의 원판을 B->C로 옮긴다.

# 옮길 원판의 개수 설정
num = int(input())

# 옮긴 횟수를 저장하기 위한 변수
switch = 0
# 옮긴 내역을 저장하기위한 리스트
switch_list = []

# 재귀함수. n개의 원판을 A에서 C까지 옮기는데 중간에 B를 거친다.
# 이 함수에서 n은 원판의 개수이며
# A는 원판이 원래 있던 지점,
# C는 원판이 도착하는 지점을 말한다.
# B는 원판이 거쳐갈 수 있는 지점이다.
def hanoi(n, A, B, C):
    # 옮긴 내역을 저장하기위해 함수 내에 전역변수를 선언.
    global switch
    # 재귀식 탈출조건. 만약 n=1이면
    if n == 1:
        # 원판 1을 A에서 C로 옮긴다.
        switch_list.append([A, C])
        # 옮긴횟수 +1
        switch += 1
    # 재귀식. 만약 n!=1이면
    else:
        # 1단계, n-1개의 원판을 A에서 B로 옮긴다.
        hanoi(n-1, A, C, B)
        # 2단계, 원판 n을 A에서 C로 옮긴다.
        switch_list.append([A, C])
        # 옮긴횟수 +1
        switch += 1
        # 3단계, 원판 n을 B에서 C로 옮긴다.
        hanoi(n-1, B, A, C)


a = "1"
b = "2"
c = "3"

# 하노이타워 실행
hanoi(num, a, b, c)
# 옮긴횟수 출력
print(switch)
# 옮긴 내역 출력
for i in switch_list:
    print(" ".join(i))
